# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]


jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "1.20.3"

    - name: Download dependencies
      run: go mod download

    - name: Build
      run: go build -o build/rabbitool

    - name: ssh-scp-ssh-pipelines
      uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
      with:
        host: ${{ secrets.SERVER_IP }}
        port: 22
        user: ubuntu
        key: ${{ secrets.ID_RSA_GITHUB_ACTION }}
        first_ssh: |
          export PID=$(ps -ef | grep ./rabbitool | grep -v grep | awk '{print $2}')
          if [[ $PID != "" ]]; then kill -SIGINT $PID; fi
        scp: |
          "./build/rabbitool" => "/home/ubuntu/app/rabbitool/"

    - name: SSH Command
      uses: D3rHase/ssh-command-action@v0.2.2
      with:
        host: ${{ secrets.SERVER_IP }}
        port: 22
        user: ubuntu
        private_key: ${{ secrets.ID_RSA_GITHUB_ACTION }}
        command: |
          -tt
          export TERM=xterm && 
          export SESSION_NAME=$(tmux ls | grep rabbitool) && 
          if [[ $SESSION_NAME = "" ]]; then tmux new -d -s rabbitool; fi && 
          tmux send-keys -t rabbitool "cd /home/ubuntu/app/rabbitool/ && ./rabbitool" C-m